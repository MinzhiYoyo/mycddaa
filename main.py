# This file was *autogenerated* from the file main.sage
from sage.all_cmdline import *   # import sage library

from verifier import Verifier

_sage_const_3 = Integer(3); _sage_const_2 = Integer(2); _sage_const_0 = Integer(0); _sage_const_1 = Integer(1)
from Host import Host
from TPM import TPM
from channel import Channel
from domain import Domain
from issuer import Issuer
DOMAINS = _sage_const_3   # 定义域的个数
HOSTS = _sage_const_2   # 定义主机的个数

def init_all():
	channel = Channel()  # 定义一个通道实例

	# 初始化域、issuer、verifier、host、tpm
	domains = []  # 定义若干个域
	issuers = []  # 定义若干个issuer, 一个域对应一个issuer
	verifiers = []  # 定义若干个verifier, 一个域对应一个verifier
	hosts = []  # 定义若干个host, 一个域对应若干个host
	host_id = _sage_const_0 
	for i in range(DOMAINS):
		domain = Domain(i)
		domains.append(domain)
		verifier = Verifier(i, domain, channel)
		verifiers.append(verifier)
		issuer = Issuer(i, domain, channel)
		for j in range(HOSTS):
			host = Host(host_id, TPM(domain), domain, channel)
			hosts.append(host)
			host_id += _sage_const_1 
		issuers.append(issuer)
	print("初始化实例成功")
	return channel, domains, issuers, verifiers, hosts

def main():
	channel, domains, issuers, verifiers, hosts = init_all()
	for host in hosts:
		host.join_request(_sage_const_1 )
		issuers[host.domain.id].join_response(host)
		host.join_request(_sage_const_2 )

		tmp = host.sign_request(_sage_const_1 )
		c1, c2 = verifiers[host.domain.id].sign_response(host)
		host.sign_request(_sage_const_2, *tmp)
		# host.sign_request(_sage_const_2 )

		flag = verifiers[host.domain.id].verify(host, c1, c2)
		if flag == _sage_const_0 :
			print("认证通过")
		else:
			print(f"失败{flag}")

if __name__ == '__main__':
	main()
	
	

